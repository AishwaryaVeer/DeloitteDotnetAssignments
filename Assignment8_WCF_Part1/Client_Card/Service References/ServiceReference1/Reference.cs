//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client_Card.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IValidate")]
    public interface IValidate {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IValidate/Transaction", ReplyAction="http://tempuri.org/IValidate/TransactionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(System.ArgumentException), Action="http://tempuri.org/IValidate/TransactionArgumentExceptionFault", Name="ArgumentException", Namespace="http://schemas.datacontract.org/2004/07/System")]
        bool Transaction(int card, System.DateTime expdt, int cvv, float transamt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IValidate/Transaction", ReplyAction="http://tempuri.org/IValidate/TransactionResponse")]
        System.Threading.Tasks.Task<bool> TransactionAsync(int card, System.DateTime expdt, int cvv, float transamt);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IValidateChannel : Client_Card.ServiceReference1.IValidate, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ValidateClient : System.ServiceModel.ClientBase<Client_Card.ServiceReference1.IValidate>, Client_Card.ServiceReference1.IValidate {
        
        public ValidateClient() {
        }
        
        public ValidateClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ValidateClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ValidateClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ValidateClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Transaction(int card, System.DateTime expdt, int cvv, float transamt) {
            return base.Channel.Transaction(card, expdt, cvv, transamt);
        }
        
        public System.Threading.Tasks.Task<bool> TransactionAsync(int card, System.DateTime expdt, int cvv, float transamt) {
            return base.Channel.TransactionAsync(card, expdt, cvv, transamt);
        }
    }
}
